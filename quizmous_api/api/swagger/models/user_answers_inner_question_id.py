# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from .. import util


class UserAnswersInnerQuestionId(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, answer_id: List[int]=None, value: str=None):  # noqa: E501
        """UserAnswersInnerQuestionId - a model defined in Swagger

        :param answer_id: The answer_id of this UserAnswersInnerQuestionId.  # noqa: E501
        :type answer_id: List[int]
        :param value: The value of this UserAnswersInnerQuestionId.  # noqa: E501
        :type value: str
        """
        self.swagger_types = {
            'answer_id': List[int],
            'value': str
        }

        self.attribute_map = {
            'answer_id': 'answer_id',
            'value': 'value'
        }

        self._answer_id = answer_id
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'UserAnswersInnerQuestionId':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserAnswers_inner_question_id of this UserAnswersInnerQuestionId.  # noqa: E501
        :rtype: UserAnswersInnerQuestionId
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer_id(self) -> List[int]:
        """Gets the answer_id of this UserAnswersInnerQuestionId.


        :return: The answer_id of this UserAnswersInnerQuestionId.
        :rtype: List[int]
        """
        return self._answer_id

    @answer_id.setter
    def answer_id(self, answer_id: List[int]):
        """Sets the answer_id of this UserAnswersInnerQuestionId.


        :param answer_id: The answer_id of this UserAnswersInnerQuestionId.
        :type answer_id: List[int]
        """

        self._answer_id = answer_id

    @property
    def value(self) -> str:
        """Gets the value of this UserAnswersInnerQuestionId.


        :return: The value of this UserAnswersInnerQuestionId.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this UserAnswersInnerQuestionId.


        :param value: The value of this UserAnswersInnerQuestionId.
        :type value: str
        """

        self._value = value
