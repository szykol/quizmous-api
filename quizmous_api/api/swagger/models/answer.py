# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from .. import util


class Answer(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, answer: str=None):  # noqa: E501
        """Answer - a model defined in Swagger

        :param id: The id of this Answer.  # noqa: E501
        :type id: int
        :param answer: The answer of this Answer.  # noqa: E501
        :type answer: str
        """
        self.swagger_types = {
            'id': int,
            'answer': str
        }

        self.attribute_map = {
            'id': 'id',
            'answer': 'answer'
        }

        self._id = id
        self._answer = answer

    @classmethod
    def from_dict(cls, dikt) -> 'Answer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Answer of this Answer.  # noqa: E501
        :rtype: Answer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Answer.


        :return: The id of this Answer.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Answer.


        :param id: The id of this Answer.
        :type id: int
        """

        self._id = id

    @property
    def answer(self) -> str:
        """Gets the answer of this Answer.


        :return: The answer of this Answer.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer: str):
        """Sets the answer of this Answer.


        :param answer: The answer of this Answer.
        :type answer: str
        """

        self._answer = answer
